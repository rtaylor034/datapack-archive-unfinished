#> slimec : api/pack > install
#--------------------
# -> name : string
# -> namespace : string (namespace)
# -> version : int
# -> downloadmessage : fixed jsonText
# => dependencies : obj[] (pack info[]) = [] 
# => supports : obj[] (pack info[]) = []
# !! these inputs are a (pack info) object
#--------------------
# <<< runcheck : = 1b
# <<< $success$
#--------------------
#> attemps to install/load the given datapack
#--------------------
#- see 'api/admin/getinstallcommands'
#- should only be called via commands generated by 'api/admin/getinstallcommands' under normal circumstacances
#- >success< will return 1 if the datapack was installed, 0 otherwise
#--------------------

#defualt in
execute unless data storage slimec:in install.dependencies[] run data modify storage slimec:in install.dependencies set value []
execute unless data storage slimec:in install.supports[] run data modify storage slimec:in install.supports set value []

#set out
data remove storage slimec:out install.runcheck
scoreboard players set $install-success slimec_out 1

#runcheck
data modify storage slimec:out install.runcheck set value true

#check dependencies
data modify storage slimec:var install.reqinstall set value []
data modify storage slimec:var install.requpdate set value []
data modify storage slimec:var install.packcheck set from storage slimec:in install.dependencies
execute if data storage slimec:in install.packcheck[] run function slimec:internal/pack/install/foreachdep
execute if data storage slimec:var install.requpdate[] run scoreboard players set $install-success slimec_out 0
execute if data storage slimec:var install.reqinstall[] run scoreboard players set $install-success slimec_out 0

#check supports
data modify storage slimec:var install.supporttrue set value []
data modify storage slimec:var install.supportfalse set value []
data modify storage slimec:var install.packcheck set from storage slimec:in install.supports
execute if data storage slimec:var install.packcheck[] run function slimec:internal/pack/install/foreachsup

#check if installed
data modify storage slimec:var cycleto.array set from storage slimec:data datapacks.installed
data modify storage slimec:var cycleto.match.namespace set from storage slimec:in install.namespace
function slimec:internal/array/cycleto
execute if data storage slimec:var cycleto.success run data modify storage slimec:var install.dupe set from storage slimec:var cycleto.array[0]

#check shared namespaces
data modify storage slimec:var install.shared set from storage slimec:settings sharedNamespaces
execute if data storage slimec:var install.shared[] run function slimec:internal/pack/install/checkshared

#dupe check
execute if data storage slimec:var cycleto.success run function slimec:internal/pack/install/dupecheck
execute if score $install-mismatch slimec_var matches 1 run scoreboard players set $install-success slimec_out 0
execute if data storage slimec:var install.badver run scoreboard players set $install-success slimec_out 0

#forceInstall check
execute store result score $install-force slimec_var run data get storage slimec:settings forceInstall
#chat
function slimec:internal/pack/install/chat/report

execute if score $install-force slimec_var matches 1.. run scoreboard players set $install-success slimec_out 1 

#install
execute if score $install-success slimec_out matches 1 unless data storage slimec:var install.dupe run data modify storage slimec:data datapacks.installed append from storage slimec:in install
#forced
execute if score $install-force slimec_var matches 1 run function slimec:internal/pack/install/forceinstall


#RESET
data remove storage slimec:in install
data remove storage slimec:var install
data remove storage slimec:var find
data remove storage slimec:var cycleto
scoreboard players reset $install-reqver slimec_var
scoreboard players reset $install-curver slimec_var
scoreboard players reset $install-ver slimec_var
scoreboard players reset $install-prever slimec_var
scoreboard players reset $install-mismatch slimec_var
scoreboard players reset $install-updated slimec_var
scoreboard players reset $install-shared slimec_var
scoreboard players reset $install-suptrue slimec_var
scoreboard players reset $install-sups slimec_var
